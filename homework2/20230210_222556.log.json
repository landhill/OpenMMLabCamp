{"env_info": "sys.platform: win32\nPython: 3.7.16 (default, Jan 17 2023, 16:06:28) [MSC v.1916 64 bit (AMD64)]\nCUDA available: True\nGPU 0: NVIDIA RTX A6000\nCUDA_HOME: C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v11.6\nNVCC: Cuda compilation tools, release 11.6, V11.6.55\nMSVC: \u7528\u4e8e x64 \u7684 Microsoft (R) C/C++ \u4f18\u5316\u7f16\u8bd1\u5668 19.33.31629 \u7248\nGCC: n/a\nPyTorch: 1.12.1\nPyTorch compiling details: PyTorch built with:\n  - C++ Version: 199711\n  - MSVC 192829337\n  - Intel(R) Math Kernel Library Version 2020.0.2 Product Build 20200624 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)\n  - OpenMP 2019\n  - LAPACK is enabled (usually provided by MKL)\n  - CPU capability usage: AVX2\n  - CUDA Runtime 11.6\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37\n  - CuDNN 8.3.2  (built against CUDA 11.5)\n  - Magma 2.5.4\n  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.6, CUDNN_VERSION=8.3.2, CXX_COMPILER=C:/cb/pytorch_1000000000000/work/tmp_bin/sccache-cl.exe, CXX_FLAGS=/DWIN32 /D_WINDOWS /GR /EHsc /w /bigobj -DUSE_PTHREADPOOL -openmp:experimental -IC:/cb/pytorch_1000000000000/work/mkl/include -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOCUPTI -DUSE_FBGEMM -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.12.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=OFF, USE_MPI=OFF, USE_NCCL=OFF, USE_NNPACK=OFF, USE_OPENMP=ON, USE_ROCM=OFF, \n\nTorchVision: 0.13.1\nOpenCV: 4.7.0\nMMCV: 1.7.1\nMMCV Compiler: MSVC 192829924\nMMCV CUDA Compiler: 11.6\nMMDetection: 2.28.1+c14dd6c", "config": "model = dict(\n    type='MaskRCNN',\n    backbone=dict(\n        type='ResNet',\n        depth=50,\n        num_stages=4,\n        out_indices=(0, 1, 2, 3),\n        frozen_stages=1,\n        norm_cfg=dict(type='BN', requires_grad=False),\n        norm_eval=True,\n        style='caffe',\n        init_cfg=dict(\n            type='Pretrained',\n            checkpoint='open-mmlab://detectron2/resnet50_caffe')),\n    neck=dict(\n        type='FPN',\n        in_channels=[256, 512, 1024, 2048],\n        out_channels=256,\n        num_outs=5),\n    rpn_head=dict(\n        type='RPNHead',\n        in_channels=256,\n        feat_channels=256,\n        anchor_generator=dict(\n            type='AnchorGenerator',\n            scales=[8],\n            ratios=[0.5, 1.0, 2.0],\n            strides=[4, 8, 16, 32, 64]),\n        bbox_coder=dict(\n            type='DeltaXYWHBBoxCoder',\n            target_means=[0.0, 0.0, 0.0, 0.0],\n            target_stds=[1.0, 1.0, 1.0, 1.0]),\n        loss_cls=dict(\n            type='CrossEntropyLoss', use_sigmoid=True, loss_weight=1.0),\n        loss_bbox=dict(type='L1Loss', loss_weight=1.0)),\n    roi_head=dict(\n        type='StandardRoIHead',\n        bbox_roi_extractor=dict(\n            type='SingleRoIExtractor',\n            roi_layer=dict(type='RoIAlign', output_size=7, sampling_ratio=0),\n            out_channels=256,\n            featmap_strides=[4, 8, 16, 32]),\n        bbox_head=dict(\n            type='Shared2FCBBoxHead',\n            in_channels=256,\n            fc_out_channels=1024,\n            roi_feat_size=7,\n            num_classes=1,\n            bbox_coder=dict(\n                type='DeltaXYWHBBoxCoder',\n                target_means=[0.0, 0.0, 0.0, 0.0],\n                target_stds=[0.1, 0.1, 0.2, 0.2]),\n            reg_class_agnostic=False,\n            loss_cls=dict(\n                type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0),\n            loss_bbox=dict(type='L1Loss', loss_weight=1.0)),\n        mask_roi_extractor=dict(\n            type='SingleRoIExtractor',\n            roi_layer=dict(type='RoIAlign', output_size=14, sampling_ratio=0),\n            out_channels=256,\n            featmap_strides=[4, 8, 16, 32]),\n        mask_head=dict(\n            type='FCNMaskHead',\n            num_convs=4,\n            in_channels=256,\n            conv_out_channels=256,\n            num_classes=1,\n            loss_mask=dict(\n                type='CrossEntropyLoss', use_mask=True, loss_weight=1.0))),\n    train_cfg=dict(\n        rpn=dict(\n            assigner=dict(\n                type='MaxIoUAssigner',\n                pos_iou_thr=0.7,\n                neg_iou_thr=0.3,\n                min_pos_iou=0.3,\n                match_low_quality=True,\n                ignore_iof_thr=-1),\n            sampler=dict(\n                type='RandomSampler',\n                num=256,\n                pos_fraction=0.5,\n                neg_pos_ub=-1,\n                add_gt_as_proposals=False),\n            allowed_border=-1,\n            pos_weight=-1,\n            debug=False),\n        rpn_proposal=dict(\n            nms_pre=2000,\n            max_per_img=1000,\n            nms=dict(type='nms', iou_threshold=0.7),\n            min_bbox_size=0),\n        rcnn=dict(\n            assigner=dict(\n                type='MaxIoUAssigner',\n                pos_iou_thr=0.5,\n                neg_iou_thr=0.5,\n                min_pos_iou=0.5,\n                match_low_quality=True,\n                ignore_iof_thr=-1),\n            sampler=dict(\n                type='RandomSampler',\n                num=512,\n                pos_fraction=0.25,\n                neg_pos_ub=-1,\n                add_gt_as_proposals=True),\n            mask_size=28,\n            pos_weight=-1,\n            debug=False)),\n    test_cfg=dict(\n        rpn=dict(\n            nms_pre=1000,\n            max_per_img=1000,\n            nms=dict(type='nms', iou_threshold=0.7),\n            min_bbox_size=0),\n        rcnn=dict(\n            score_thr=0.05,\n            nms=dict(type='nms', iou_threshold=0.5),\n            max_per_img=100,\n            mask_thr_binary=0.5)))\ndataset_type = 'COCODataset'\ndata_root = 'data/coco/'\nimg_norm_cfg = dict(\n    mean=[103.53, 116.28, 123.675], std=[1.0, 1.0, 1.0], to_rgb=False)\ntrain_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(\n        type='LoadAnnotations',\n        with_bbox=True,\n        with_mask=True,\n        poly2mask=False),\n    dict(\n        type='Resize',\n        img_scale=[(1333, 640), (1333, 672), (1333, 704), (1333, 736),\n                   (1333, 768), (1333, 800)],\n        multiscale_mode='value',\n        keep_ratio=True),\n    dict(type='RandomFlip', flip_ratio=0.5),\n    dict(\n        type='Normalize',\n        mean=[103.53, 116.28, 123.675],\n        std=[1.0, 1.0, 1.0],\n        to_rgb=False),\n    dict(type='Pad', size_divisor=32),\n    dict(type='DefaultFormatBundle'),\n    dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels', 'gt_masks'])\n]\ntest_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(\n        type='MultiScaleFlipAug',\n        img_scale=(1333, 800),\n        flip=False,\n        transforms=[\n            dict(type='Resize', keep_ratio=True),\n            dict(type='RandomFlip'),\n            dict(\n                type='Normalize',\n                mean=[103.53, 116.28, 123.675],\n                std=[1.0, 1.0, 1.0],\n                to_rgb=False),\n            dict(type='Pad', size_divisor=32),\n            dict(type='ImageToTensor', keys=['img']),\n            dict(type='Collect', keys=['img'])\n        ])\n]\ndata = dict(\n    samples_per_gpu=2,\n    workers_per_gpu=2,\n    train=dict(\n        type='CocoDataset',\n        ann_file='data/balloon/train.json',\n        img_prefix='data/balloon/train/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='LoadAnnotations',\n                with_bbox=True,\n                with_mask=True,\n                poly2mask=False),\n            dict(\n                type='Resize',\n                img_scale=[(1333, 640), (1333, 672), (1333, 704), (1333, 736),\n                           (1333, 768), (1333, 800)],\n                multiscale_mode='value',\n                keep_ratio=True),\n            dict(type='RandomFlip', flip_ratio=0.5),\n            dict(\n                type='Normalize',\n                mean=[103.53, 116.28, 123.675],\n                std=[1.0, 1.0, 1.0],\n                to_rgb=False),\n            dict(type='Pad', size_divisor=32),\n            dict(type='DefaultFormatBundle'),\n            dict(\n                type='Collect',\n                keys=['img', 'gt_bboxes', 'gt_labels', 'gt_masks'])\n        ],\n        classes=('balloon', )),\n    val=dict(\n        type='CocoDataset',\n        ann_file='data/balloon/val.json',\n        img_prefix='data/balloon/val/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(1333, 800),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[103.53, 116.28, 123.675],\n                        std=[1.0, 1.0, 1.0],\n                        to_rgb=False),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ],\n        classes=('balloon', )),\n    test=dict(\n        type='CocoDataset',\n        ann_file='data/balloon/val.json',\n        img_prefix='data/balloon/val/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(1333, 800),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[103.53, 116.28, 123.675],\n                        std=[1.0, 1.0, 1.0],\n                        to_rgb=False),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ],\n        classes=('balloon', )))\nevaluation = dict(metric='bbox', interval=1, save_best='auto')\noptimizer = dict(type='SGD', lr=0.001, momentum=0.9, weight_decay=0.0001)\noptimizer_config = dict(grad_clip=None)\nlr_config = dict(\n    policy='step',\n    warmup='linear',\n    warmup_iters=500,\n    warmup_ratio=0.001,\n    step=[8, 11])\nrunner = dict(type='EpochBasedRunner', max_epochs=100)\ncheckpoint_config = dict(interval=10)\nlog_config = dict(interval=50, hooks=[dict(type='TextLoggerHook')])\ncustom_hooks = [dict(type='NumClassCheckHook')]\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = 'https://download.openmmlab.com/mmdetection/v2.0/mask_rcnn/mask_rcnn_r50_caffe_fpn_mstrain-poly_3x_coco/mask_rcnn_r50_caffe_fpn_mstrain-poly_3x_coco_bbox_mAP-0.408__segm_mAP-0.37_20200504_163245-42aa3d00.pth'\nresume_from = None\nworkflow = [('train', 1)]\nopencv_num_threads = 0\nmp_start_method = 'fork'\nauto_scale_lr = dict(enable=False, base_batch_size=16)\nclasses = ('balloon', )\nwork_dir = 'work/balloon'\nauto_resume = False\ngpu_ids = [0]\n", "seed": 1489037860, "exp_name": "mask_rcnn_r50_caffe_fpn_mstrain-poly_1x_balloon.py", "hook_msgs": {}}
{"mode": "val", "epoch": 1, "iter": 13, "lr": 6e-05, "bbox_mAP": 0.0088, "bbox_mAP_50": 0.0195, "bbox_mAP_75": 0.0044, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.0107, "bbox_mAP_l": 0.013, "bbox_mAP_copypaste": "0.0088 0.0195 0.0044 0.0000 0.0107 0.0130"}
{"mode": "val", "epoch": 2, "iter": 13, "lr": 0.00012, "bbox_mAP": 0.1696, "bbox_mAP_50": 0.2253, "bbox_mAP_75": 0.2081, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.0815, "bbox_mAP_l": 0.2306, "bbox_mAP_copypaste": "0.1696 0.2253 0.2081 0.0000 0.0815 0.2306"}
{"mode": "val", "epoch": 3, "iter": 13, "lr": 0.00018, "bbox_mAP": 0.5874, "bbox_mAP_50": 0.7303, "bbox_mAP_75": 0.7017, "bbox_mAP_s": 0.0122, "bbox_mAP_m": 0.3575, "bbox_mAP_l": 0.6783, "bbox_mAP_copypaste": "0.5874 0.7303 0.7017 0.0122 0.3575 0.6783"}
{"mode": "val", "epoch": 4, "iter": 13, "lr": 0.00025, "bbox_mAP": 0.6529, "bbox_mAP_50": 0.7831, "bbox_mAP_75": 0.7672, "bbox_mAP_s": 0.011, "bbox_mAP_m": 0.5123, "bbox_mAP_l": 0.7293, "bbox_mAP_copypaste": "0.6529 0.7831 0.7672 0.0110 0.5123 0.7293"}
{"mode": "val", "epoch": 5, "iter": 13, "lr": 0.00031, "bbox_mAP": 0.6695, "bbox_mAP_50": 0.8088, "bbox_mAP_75": 0.777, "bbox_mAP_s": 0.0392, "bbox_mAP_m": 0.5664, "bbox_mAP_l": 0.7337, "bbox_mAP_copypaste": "0.6695 0.8088 0.7770 0.0392 0.5664 0.7337"}
{"mode": "val", "epoch": 6, "iter": 13, "lr": 0.00037, "bbox_mAP": 0.7116, "bbox_mAP_50": 0.846, "bbox_mAP_75": 0.8004, "bbox_mAP_s": 0.0805, "bbox_mAP_m": 0.6138, "bbox_mAP_l": 0.7777, "bbox_mAP_copypaste": "0.7116 0.8460 0.8004 0.0805 0.6138 0.7777"}
{"mode": "val", "epoch": 7, "iter": 13, "lr": 0.00043, "bbox_mAP": 0.7042, "bbox_mAP_50": 0.8656, "bbox_mAP_75": 0.8084, "bbox_mAP_s": 0.0393, "bbox_mAP_m": 0.5971, "bbox_mAP_l": 0.7707, "bbox_mAP_copypaste": "0.7042 0.8656 0.8084 0.0393 0.5971 0.7707"}
{"mode": "val", "epoch": 8, "iter": 13, "lr": 0.00049, "bbox_mAP": 0.7515, "bbox_mAP_50": 0.8725, "bbox_mAP_75": 0.8435, "bbox_mAP_s": 0.0505, "bbox_mAP_m": 0.6328, "bbox_mAP_l": 0.8187, "bbox_mAP_copypaste": "0.7515 0.8725 0.8435 0.0505 0.6328 0.8187"}
{"mode": "val", "epoch": 9, "iter": 13, "lr": 6e-05, "bbox_mAP": 0.7606, "bbox_mAP_50": 0.874, "bbox_mAP_75": 0.8438, "bbox_mAP_s": 0.0505, "bbox_mAP_m": 0.628, "bbox_mAP_l": 0.8341, "bbox_mAP_copypaste": "0.7606 0.8740 0.8438 0.0505 0.6280 0.8341"}
{"mode": "val", "epoch": 10, "iter": 13, "lr": 6e-05, "bbox_mAP": 0.7593, "bbox_mAP_50": 0.8756, "bbox_mAP_75": 0.8443, "bbox_mAP_s": 0.0505, "bbox_mAP_m": 0.6302, "bbox_mAP_l": 0.8313, "bbox_mAP_copypaste": "0.7593 0.8756 0.8443 0.0505 0.6302 0.8313"}
{"mode": "val", "epoch": 11, "iter": 13, "lr": 7e-05, "bbox_mAP": 0.7485, "bbox_mAP_50": 0.8783, "bbox_mAP_75": 0.8457, "bbox_mAP_s": 0.0589, "bbox_mAP_m": 0.6393, "bbox_mAP_l": 0.814, "bbox_mAP_copypaste": "0.7485 0.8783 0.8457 0.0589 0.6393 0.8140"}
{"mode": "val", "epoch": 12, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7526, "bbox_mAP_50": 0.8782, "bbox_mAP_75": 0.8456, "bbox_mAP_s": 0.0589, "bbox_mAP_m": 0.6393, "bbox_mAP_l": 0.8205, "bbox_mAP_copypaste": "0.7526 0.8782 0.8456 0.0589 0.6393 0.8205"}
{"mode": "val", "epoch": 13, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.756, "bbox_mAP_50": 0.8782, "bbox_mAP_75": 0.8456, "bbox_mAP_s": 0.0589, "bbox_mAP_m": 0.6406, "bbox_mAP_l": 0.8247, "bbox_mAP_copypaste": "0.7560 0.8782 0.8456 0.0589 0.6406 0.8247"}
{"mode": "val", "epoch": 14, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.754, "bbox_mAP_50": 0.8781, "bbox_mAP_75": 0.8456, "bbox_mAP_s": 0.0589, "bbox_mAP_m": 0.6406, "bbox_mAP_l": 0.8221, "bbox_mAP_copypaste": "0.7540 0.8781 0.8456 0.0589 0.6406 0.8221"}
{"mode": "val", "epoch": 15, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.756, "bbox_mAP_50": 0.8782, "bbox_mAP_75": 0.8456, "bbox_mAP_s": 0.0589, "bbox_mAP_m": 0.6406, "bbox_mAP_l": 0.8248, "bbox_mAP_copypaste": "0.7560 0.8782 0.8456 0.0589 0.6406 0.8248"}
{"mode": "val", "epoch": 16, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.756, "bbox_mAP_50": 0.8782, "bbox_mAP_75": 0.8456, "bbox_mAP_s": 0.0589, "bbox_mAP_m": 0.6406, "bbox_mAP_l": 0.8249, "bbox_mAP_copypaste": "0.7560 0.8782 0.8456 0.0589 0.6406 0.8249"}
{"mode": "val", "epoch": 17, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7541, "bbox_mAP_50": 0.8783, "bbox_mAP_75": 0.8457, "bbox_mAP_s": 0.0589, "bbox_mAP_m": 0.6406, "bbox_mAP_l": 0.8222, "bbox_mAP_copypaste": "0.7541 0.8783 0.8457 0.0589 0.6406 0.8222"}
{"mode": "val", "epoch": 18, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7555, "bbox_mAP_50": 0.8782, "bbox_mAP_75": 0.8457, "bbox_mAP_s": 0.0589, "bbox_mAP_m": 0.6406, "bbox_mAP_l": 0.8242, "bbox_mAP_copypaste": "0.7555 0.8782 0.8457 0.0589 0.6406 0.8242"}
{"mode": "val", "epoch": 19, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7535, "bbox_mAP_50": 0.8782, "bbox_mAP_75": 0.8457, "bbox_mAP_s": 0.0589, "bbox_mAP_m": 0.6406, "bbox_mAP_l": 0.8215, "bbox_mAP_copypaste": "0.7535 0.8782 0.8457 0.0589 0.6406 0.8215"}
{"mode": "val", "epoch": 20, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7533, "bbox_mAP_50": 0.8782, "bbox_mAP_75": 0.8456, "bbox_mAP_s": 0.0589, "bbox_mAP_m": 0.6406, "bbox_mAP_l": 0.8215, "bbox_mAP_copypaste": "0.7533 0.8782 0.8456 0.0589 0.6406 0.8215"}
{"mode": "val", "epoch": 21, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7532, "bbox_mAP_50": 0.8782, "bbox_mAP_75": 0.8457, "bbox_mAP_s": 0.0589, "bbox_mAP_m": 0.6406, "bbox_mAP_l": 0.821, "bbox_mAP_copypaste": "0.7532 0.8782 0.8457 0.0589 0.6406 0.8210"}
{"mode": "val", "epoch": 22, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7579, "bbox_mAP_50": 0.8783, "bbox_mAP_75": 0.8457, "bbox_mAP_s": 0.0589, "bbox_mAP_m": 0.6406, "bbox_mAP_l": 0.8262, "bbox_mAP_copypaste": "0.7579 0.8783 0.8457 0.0589 0.6406 0.8262"}
{"mode": "val", "epoch": 23, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7529, "bbox_mAP_50": 0.8783, "bbox_mAP_75": 0.8457, "bbox_mAP_s": 0.0589, "bbox_mAP_m": 0.6406, "bbox_mAP_l": 0.821, "bbox_mAP_copypaste": "0.7529 0.8783 0.8457 0.0589 0.6406 0.8210"}
{"mode": "val", "epoch": 24, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7529, "bbox_mAP_50": 0.8782, "bbox_mAP_75": 0.8457, "bbox_mAP_s": 0.0589, "bbox_mAP_m": 0.6406, "bbox_mAP_l": 0.8209, "bbox_mAP_copypaste": "0.7529 0.8782 0.8457 0.0589 0.6406 0.8209"}
{"mode": "val", "epoch": 25, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7528, "bbox_mAP_50": 0.8783, "bbox_mAP_75": 0.8458, "bbox_mAP_s": 0.0589, "bbox_mAP_m": 0.6406, "bbox_mAP_l": 0.8209, "bbox_mAP_copypaste": "0.7528 0.8783 0.8458 0.0589 0.6406 0.8209"}
{"mode": "val", "epoch": 26, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7527, "bbox_mAP_50": 0.8787, "bbox_mAP_75": 0.8452, "bbox_mAP_s": 0.0589, "bbox_mAP_m": 0.6384, "bbox_mAP_l": 0.8209, "bbox_mAP_copypaste": "0.7527 0.8787 0.8452 0.0589 0.6384 0.8209"}
{"mode": "val", "epoch": 27, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7539, "bbox_mAP_50": 0.8783, "bbox_mAP_75": 0.845, "bbox_mAP_s": 0.0589, "bbox_mAP_m": 0.6384, "bbox_mAP_l": 0.8228, "bbox_mAP_copypaste": "0.7539 0.8783 0.8450 0.0589 0.6384 0.8228"}
{"mode": "val", "epoch": 28, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7567, "bbox_mAP_50": 0.8783, "bbox_mAP_75": 0.845, "bbox_mAP_s": 0.0589, "bbox_mAP_m": 0.6384, "bbox_mAP_l": 0.8256, "bbox_mAP_copypaste": "0.7567 0.8783 0.8450 0.0589 0.6384 0.8256"}
{"mode": "val", "epoch": 29, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7559, "bbox_mAP_50": 0.8783, "bbox_mAP_75": 0.8451, "bbox_mAP_s": 0.0589, "bbox_mAP_m": 0.6389, "bbox_mAP_l": 0.8257, "bbox_mAP_copypaste": "0.7559 0.8783 0.8451 0.0589 0.6389 0.8257"}
{"mode": "val", "epoch": 30, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7578, "bbox_mAP_50": 0.8787, "bbox_mAP_75": 0.8452, "bbox_mAP_s": 0.0589, "bbox_mAP_m": 0.6389, "bbox_mAP_l": 0.8281, "bbox_mAP_copypaste": "0.7578 0.8787 0.8452 0.0589 0.6389 0.8281"}
{"mode": "val", "epoch": 31, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7606, "bbox_mAP_50": 0.8788, "bbox_mAP_75": 0.8453, "bbox_mAP_s": 0.0589, "bbox_mAP_m": 0.6389, "bbox_mAP_l": 0.8309, "bbox_mAP_copypaste": "0.7606 0.8788 0.8453 0.0589 0.6389 0.8309"}
{"mode": "val", "epoch": 32, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7608, "bbox_mAP_50": 0.8787, "bbox_mAP_75": 0.8452, "bbox_mAP_s": 0.0589, "bbox_mAP_m": 0.6385, "bbox_mAP_l": 0.8309, "bbox_mAP_copypaste": "0.7608 0.8787 0.8452 0.0589 0.6385 0.8309"}
{"mode": "val", "epoch": 33, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7584, "bbox_mAP_50": 0.8786, "bbox_mAP_75": 0.8393, "bbox_mAP_s": 0.0252, "bbox_mAP_m": 0.6385, "bbox_mAP_l": 0.8309, "bbox_mAP_copypaste": "0.7584 0.8786 0.8393 0.0252 0.6385 0.8309"}
{"mode": "val", "epoch": 34, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7594, "bbox_mAP_50": 0.8785, "bbox_mAP_75": 0.845, "bbox_mAP_s": 0.0589, "bbox_mAP_m": 0.639, "bbox_mAP_l": 0.8293, "bbox_mAP_copypaste": "0.7594 0.8785 0.8450 0.0589 0.6390 0.8293"}
{"mode": "val", "epoch": 35, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.756, "bbox_mAP_50": 0.8786, "bbox_mAP_75": 0.8393, "bbox_mAP_s": 0.0252, "bbox_mAP_m": 0.6376, "bbox_mAP_l": 0.828, "bbox_mAP_copypaste": "0.7560 0.8786 0.8393 0.0252 0.6376 0.8280"}
{"mode": "val", "epoch": 36, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7647, "bbox_mAP_50": 0.8786, "bbox_mAP_75": 0.8392, "bbox_mAP_s": 0.0303, "bbox_mAP_m": 0.639, "bbox_mAP_l": 0.8389, "bbox_mAP_copypaste": "0.7647 0.8786 0.8392 0.0303 0.6390 0.8389"}
{"mode": "val", "epoch": 37, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7666, "bbox_mAP_50": 0.8786, "bbox_mAP_75": 0.8392, "bbox_mAP_s": 0.0303, "bbox_mAP_m": 0.639, "bbox_mAP_l": 0.8406, "bbox_mAP_copypaste": "0.7666 0.8786 0.8392 0.0303 0.6390 0.8406"}
{"mode": "val", "epoch": 38, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7658, "bbox_mAP_50": 0.8788, "bbox_mAP_75": 0.8393, "bbox_mAP_s": 0.0303, "bbox_mAP_m": 0.6367, "bbox_mAP_l": 0.8406, "bbox_mAP_copypaste": "0.7658 0.8788 0.8393 0.0303 0.6367 0.8406"}
{"mode": "val", "epoch": 39, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7627, "bbox_mAP_50": 0.8787, "bbox_mAP_75": 0.8393, "bbox_mAP_s": 0.0303, "bbox_mAP_m": 0.6376, "bbox_mAP_l": 0.8353, "bbox_mAP_copypaste": "0.7627 0.8787 0.8393 0.0303 0.6376 0.8353"}
{"mode": "val", "epoch": 40, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7628, "bbox_mAP_50": 0.8788, "bbox_mAP_75": 0.8394, "bbox_mAP_s": 0.0303, "bbox_mAP_m": 0.639, "bbox_mAP_l": 0.8353, "bbox_mAP_copypaste": "0.7628 0.8788 0.8394 0.0303 0.6390 0.8353"}
{"mode": "val", "epoch": 41, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7627, "bbox_mAP_50": 0.8786, "bbox_mAP_75": 0.839, "bbox_mAP_s": 0.0303, "bbox_mAP_m": 0.639, "bbox_mAP_l": 0.8354, "bbox_mAP_copypaste": "0.7627 0.8786 0.8390 0.0303 0.6390 0.8354"}
{"mode": "val", "epoch": 42, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7641, "bbox_mAP_50": 0.8786, "bbox_mAP_75": 0.839, "bbox_mAP_s": 0.0303, "bbox_mAP_m": 0.639, "bbox_mAP_l": 0.8373, "bbox_mAP_copypaste": "0.7641 0.8786 0.8390 0.0303 0.6390 0.8373"}
{"mode": "val", "epoch": 43, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.764, "bbox_mAP_50": 0.8785, "bbox_mAP_75": 0.839, "bbox_mAP_s": 0.0303, "bbox_mAP_m": 0.639, "bbox_mAP_l": 0.8372, "bbox_mAP_copypaste": "0.7640 0.8785 0.8390 0.0303 0.6390 0.8372"}
{"mode": "val", "epoch": 44, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7589, "bbox_mAP_50": 0.8786, "bbox_mAP_75": 0.839, "bbox_mAP_s": 0.0303, "bbox_mAP_m": 0.639, "bbox_mAP_l": 0.8312, "bbox_mAP_copypaste": "0.7589 0.8786 0.8390 0.0303 0.6390 0.8312"}
{"mode": "val", "epoch": 45, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7617, "bbox_mAP_50": 0.8786, "bbox_mAP_75": 0.839, "bbox_mAP_s": 0.0303, "bbox_mAP_m": 0.639, "bbox_mAP_l": 0.8354, "bbox_mAP_copypaste": "0.7617 0.8786 0.8390 0.0303 0.6390 0.8354"}
{"mode": "val", "epoch": 46, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7575, "bbox_mAP_50": 0.8786, "bbox_mAP_75": 0.839, "bbox_mAP_s": 0.0303, "bbox_mAP_m": 0.639, "bbox_mAP_l": 0.8311, "bbox_mAP_copypaste": "0.7575 0.8786 0.8390 0.0303 0.6390 0.8311"}
{"mode": "val", "epoch": 47, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7642, "bbox_mAP_50": 0.8785, "bbox_mAP_75": 0.839, "bbox_mAP_s": 0.0303, "bbox_mAP_m": 0.639, "bbox_mAP_l": 0.8375, "bbox_mAP_copypaste": "0.7642 0.8785 0.8390 0.0303 0.6390 0.8375"}
{"mode": "val", "epoch": 48, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7582, "bbox_mAP_50": 0.8786, "bbox_mAP_75": 0.839, "bbox_mAP_s": 0.0303, "bbox_mAP_m": 0.6376, "bbox_mAP_l": 0.83, "bbox_mAP_copypaste": "0.7582 0.8786 0.8390 0.0303 0.6376 0.8300"}
{"mode": "val", "epoch": 49, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7597, "bbox_mAP_50": 0.8787, "bbox_mAP_75": 0.8391, "bbox_mAP_s": 0.0303, "bbox_mAP_m": 0.638, "bbox_mAP_l": 0.8317, "bbox_mAP_copypaste": "0.7597 0.8787 0.8391 0.0303 0.6380 0.8317"}
{"mode": "val", "epoch": 50, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7568, "bbox_mAP_50": 0.8791, "bbox_mAP_75": 0.8394, "bbox_mAP_s": 0.0303, "bbox_mAP_m": 0.6398, "bbox_mAP_l": 0.8285, "bbox_mAP_copypaste": "0.7568 0.8791 0.8394 0.0303 0.6398 0.8285"}
{"mode": "val", "epoch": 51, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7611, "bbox_mAP_50": 0.8791, "bbox_mAP_75": 0.8395, "bbox_mAP_s": 0.0379, "bbox_mAP_m": 0.6398, "bbox_mAP_l": 0.8341, "bbox_mAP_copypaste": "0.7611 0.8791 0.8395 0.0379 0.6398 0.8341"}
{"mode": "val", "epoch": 52, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7662, "bbox_mAP_50": 0.8793, "bbox_mAP_75": 0.8397, "bbox_mAP_s": 0.0379, "bbox_mAP_m": 0.6398, "bbox_mAP_l": 0.8401, "bbox_mAP_copypaste": "0.7662 0.8793 0.8397 0.0379 0.6398 0.8401"}
{"mode": "val", "epoch": 53, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7662, "bbox_mAP_50": 0.8793, "bbox_mAP_75": 0.8396, "bbox_mAP_s": 0.0379, "bbox_mAP_m": 0.6398, "bbox_mAP_l": 0.8401, "bbox_mAP_copypaste": "0.7662 0.8793 0.8396 0.0379 0.6398 0.8401"}
{"mode": "val", "epoch": 54, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7591, "bbox_mAP_50": 0.8797, "bbox_mAP_75": 0.84, "bbox_mAP_s": 0.0379, "bbox_mAP_m": 0.6444, "bbox_mAP_l": 0.8303, "bbox_mAP_copypaste": "0.7591 0.8797 0.8400 0.0379 0.6444 0.8303"}
{"mode": "val", "epoch": 55, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7596, "bbox_mAP_50": 0.8797, "bbox_mAP_75": 0.84, "bbox_mAP_s": 0.0379, "bbox_mAP_m": 0.6444, "bbox_mAP_l": 0.8324, "bbox_mAP_copypaste": "0.7596 0.8797 0.8400 0.0379 0.6444 0.8324"}
{"mode": "val", "epoch": 56, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7687, "bbox_mAP_50": 0.8813, "bbox_mAP_75": 0.848, "bbox_mAP_s": 0.1515, "bbox_mAP_m": 0.6444, "bbox_mAP_l": 0.8393, "bbox_mAP_copypaste": "0.7687 0.8813 0.8480 0.1515 0.6444 0.8393"}
{"mode": "val", "epoch": 57, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7642, "bbox_mAP_50": 0.8809, "bbox_mAP_75": 0.8476, "bbox_mAP_s": 0.1515, "bbox_mAP_m": 0.6398, "bbox_mAP_l": 0.8341, "bbox_mAP_copypaste": "0.7642 0.8809 0.8476 0.1515 0.6398 0.8341"}
{"mode": "val", "epoch": 58, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7642, "bbox_mAP_50": 0.8809, "bbox_mAP_75": 0.8476, "bbox_mAP_s": 0.1515, "bbox_mAP_m": 0.6398, "bbox_mAP_l": 0.8341, "bbox_mAP_copypaste": "0.7642 0.8809 0.8476 0.1515 0.6398 0.8341"}
{"mode": "val", "epoch": 59, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7642, "bbox_mAP_50": 0.8809, "bbox_mAP_75": 0.8476, "bbox_mAP_s": 0.1515, "bbox_mAP_m": 0.6398, "bbox_mAP_l": 0.8341, "bbox_mAP_copypaste": "0.7642 0.8809 0.8476 0.1515 0.6398 0.8341"}
{"mode": "val", "epoch": 60, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7642, "bbox_mAP_50": 0.8812, "bbox_mAP_75": 0.848, "bbox_mAP_s": 0.1515, "bbox_mAP_m": 0.643, "bbox_mAP_l": 0.8342, "bbox_mAP_copypaste": "0.7642 0.8812 0.8480 0.1515 0.6430 0.8342"}
{"mode": "val", "epoch": 61, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7644, "bbox_mAP_50": 0.8812, "bbox_mAP_75": 0.848, "bbox_mAP_s": 0.1515, "bbox_mAP_m": 0.6426, "bbox_mAP_l": 0.8341, "bbox_mAP_copypaste": "0.7644 0.8812 0.8480 0.1515 0.6426 0.8341"}
{"mode": "val", "epoch": 62, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7616, "bbox_mAP_50": 0.8814, "bbox_mAP_75": 0.8481, "bbox_mAP_s": 0.1515, "bbox_mAP_m": 0.643, "bbox_mAP_l": 0.8304, "bbox_mAP_copypaste": "0.7616 0.8814 0.8481 0.1515 0.6430 0.8304"}
{"mode": "val", "epoch": 63, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.764, "bbox_mAP_50": 0.8814, "bbox_mAP_75": 0.8482, "bbox_mAP_s": 0.1515, "bbox_mAP_m": 0.643, "bbox_mAP_l": 0.8337, "bbox_mAP_copypaste": "0.7640 0.8814 0.8482 0.1515 0.6430 0.8337"}
{"mode": "val", "epoch": 64, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7645, "bbox_mAP_50": 0.8814, "bbox_mAP_75": 0.8482, "bbox_mAP_s": 0.1515, "bbox_mAP_m": 0.643, "bbox_mAP_l": 0.8343, "bbox_mAP_copypaste": "0.7645 0.8814 0.8482 0.1515 0.6430 0.8343"}
{"mode": "val", "epoch": 65, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7616, "bbox_mAP_50": 0.8813, "bbox_mAP_75": 0.8481, "bbox_mAP_s": 0.1515, "bbox_mAP_m": 0.643, "bbox_mAP_l": 0.8304, "bbox_mAP_copypaste": "0.7616 0.8813 0.8481 0.1515 0.6430 0.8304"}
{"mode": "val", "epoch": 66, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7667, "bbox_mAP_50": 0.8813, "bbox_mAP_75": 0.8481, "bbox_mAP_s": 0.1515, "bbox_mAP_m": 0.643, "bbox_mAP_l": 0.8365, "bbox_mAP_copypaste": "0.7667 0.8813 0.8481 0.1515 0.6430 0.8365"}
{"mode": "val", "epoch": 67, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7707, "bbox_mAP_50": 0.8816, "bbox_mAP_75": 0.8483, "bbox_mAP_s": 0.1515, "bbox_mAP_m": 0.643, "bbox_mAP_l": 0.8418, "bbox_mAP_copypaste": "0.7707 0.8816 0.8483 0.1515 0.6430 0.8418"}
{"mode": "val", "epoch": 68, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7668, "bbox_mAP_50": 0.8815, "bbox_mAP_75": 0.8483, "bbox_mAP_s": 0.1515, "bbox_mAP_m": 0.643, "bbox_mAP_l": 0.8366, "bbox_mAP_copypaste": "0.7668 0.8815 0.8483 0.1515 0.6430 0.8366"}
{"mode": "val", "epoch": 69, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7684, "bbox_mAP_50": 0.8809, "bbox_mAP_75": 0.848, "bbox_mAP_s": 0.1515, "bbox_mAP_m": 0.6426, "bbox_mAP_l": 0.8389, "bbox_mAP_copypaste": "0.7684 0.8809 0.8480 0.1515 0.6426 0.8389"}
{"mode": "val", "epoch": 70, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7641, "bbox_mAP_50": 0.881, "bbox_mAP_75": 0.8482, "bbox_mAP_s": 0.1515, "bbox_mAP_m": 0.643, "bbox_mAP_l": 0.8332, "bbox_mAP_copypaste": "0.7641 0.8810 0.8482 0.1515 0.6430 0.8332"}
{"mode": "val", "epoch": 71, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7718, "bbox_mAP_50": 0.8812, "bbox_mAP_75": 0.8484, "bbox_mAP_s": 0.1515, "bbox_mAP_m": 0.6537, "bbox_mAP_l": 0.8396, "bbox_mAP_copypaste": "0.7718 0.8812 0.8484 0.1515 0.6537 0.8396"}
{"mode": "val", "epoch": 72, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7718, "bbox_mAP_50": 0.8812, "bbox_mAP_75": 0.8484, "bbox_mAP_s": 0.1515, "bbox_mAP_m": 0.6537, "bbox_mAP_l": 0.8395, "bbox_mAP_copypaste": "0.7718 0.8812 0.8484 0.1515 0.6537 0.8395"}
{"mode": "val", "epoch": 73, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7718, "bbox_mAP_50": 0.8812, "bbox_mAP_75": 0.8484, "bbox_mAP_s": 0.1515, "bbox_mAP_m": 0.6537, "bbox_mAP_l": 0.8396, "bbox_mAP_copypaste": "0.7718 0.8812 0.8484 0.1515 0.6537 0.8396"}
{"mode": "val", "epoch": 74, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7733, "bbox_mAP_50": 0.8812, "bbox_mAP_75": 0.8484, "bbox_mAP_s": 0.1515, "bbox_mAP_m": 0.6537, "bbox_mAP_l": 0.8418, "bbox_mAP_copypaste": "0.7733 0.8812 0.8484 0.1515 0.6537 0.8418"}
{"mode": "val", "epoch": 75, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7736, "bbox_mAP_50": 0.881, "bbox_mAP_75": 0.8482, "bbox_mAP_s": 0.1515, "bbox_mAP_m": 0.6537, "bbox_mAP_l": 0.8426, "bbox_mAP_copypaste": "0.7736 0.8810 0.8482 0.1515 0.6537 0.8426"}
{"mode": "val", "epoch": 76, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7736, "bbox_mAP_50": 0.881, "bbox_mAP_75": 0.8482, "bbox_mAP_s": 0.1515, "bbox_mAP_m": 0.6537, "bbox_mAP_l": 0.8426, "bbox_mAP_copypaste": "0.7736 0.8810 0.8482 0.1515 0.6537 0.8426"}
{"mode": "val", "epoch": 77, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7757, "bbox_mAP_50": 0.8811, "bbox_mAP_75": 0.8483, "bbox_mAP_s": 0.1515, "bbox_mAP_m": 0.6537, "bbox_mAP_l": 0.8457, "bbox_mAP_copypaste": "0.7757 0.8811 0.8483 0.1515 0.6537 0.8457"}
{"mode": "val", "epoch": 78, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.766, "bbox_mAP_50": 0.881, "bbox_mAP_75": 0.8482, "bbox_mAP_s": 0.1515, "bbox_mAP_m": 0.643, "bbox_mAP_l": 0.836, "bbox_mAP_copypaste": "0.7660 0.8810 0.8482 0.1515 0.6430 0.8360"}
{"mode": "val", "epoch": 79, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.768, "bbox_mAP_50": 0.8798, "bbox_mAP_75": 0.8475, "bbox_mAP_s": 0.1515, "bbox_mAP_m": 0.6537, "bbox_mAP_l": 0.8355, "bbox_mAP_copypaste": "0.7680 0.8798 0.8475 0.1515 0.6537 0.8355"}
{"mode": "val", "epoch": 80, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7685, "bbox_mAP_50": 0.88, "bbox_mAP_75": 0.8477, "bbox_mAP_s": 0.1515, "bbox_mAP_m": 0.6537, "bbox_mAP_l": 0.8358, "bbox_mAP_copypaste": "0.7685 0.8800 0.8477 0.1515 0.6537 0.8358"}
{"mode": "val", "epoch": 81, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7709, "bbox_mAP_50": 0.8801, "bbox_mAP_75": 0.8478, "bbox_mAP_s": 0.1515, "bbox_mAP_m": 0.6537, "bbox_mAP_l": 0.8387, "bbox_mAP_copypaste": "0.7709 0.8801 0.8478 0.1515 0.6537 0.8387"}
{"mode": "val", "epoch": 82, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7685, "bbox_mAP_50": 0.8801, "bbox_mAP_75": 0.8478, "bbox_mAP_s": 0.1515, "bbox_mAP_m": 0.6537, "bbox_mAP_l": 0.8358, "bbox_mAP_copypaste": "0.7685 0.8801 0.8478 0.1515 0.6537 0.8358"}
{"mode": "val", "epoch": 83, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7685, "bbox_mAP_50": 0.8801, "bbox_mAP_75": 0.8478, "bbox_mAP_s": 0.1515, "bbox_mAP_m": 0.6537, "bbox_mAP_l": 0.836, "bbox_mAP_copypaste": "0.7685 0.8801 0.8478 0.1515 0.6537 0.8360"}
{"mode": "val", "epoch": 84, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7705, "bbox_mAP_50": 0.88, "bbox_mAP_75": 0.8477, "bbox_mAP_s": 0.1515, "bbox_mAP_m": 0.6537, "bbox_mAP_l": 0.8389, "bbox_mAP_copypaste": "0.7705 0.8800 0.8477 0.1515 0.6537 0.8389"}
{"mode": "val", "epoch": 85, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7692, "bbox_mAP_50": 0.88, "bbox_mAP_75": 0.8477, "bbox_mAP_s": 0.1515, "bbox_mAP_m": 0.6663, "bbox_mAP_l": 0.8352, "bbox_mAP_copypaste": "0.7692 0.8800 0.8477 0.1515 0.6663 0.8352"}
{"mode": "val", "epoch": 86, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7675, "bbox_mAP_50": 0.8801, "bbox_mAP_75": 0.8478, "bbox_mAP_s": 0.1515, "bbox_mAP_m": 0.6663, "bbox_mAP_l": 0.8322, "bbox_mAP_copypaste": "0.7675 0.8801 0.8478 0.1515 0.6663 0.8322"}
{"mode": "val", "epoch": 87, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7696, "bbox_mAP_50": 0.88, "bbox_mAP_75": 0.8477, "bbox_mAP_s": 0.1515, "bbox_mAP_m": 0.6663, "bbox_mAP_l": 0.8354, "bbox_mAP_copypaste": "0.7696 0.8800 0.8477 0.1515 0.6663 0.8354"}
{"mode": "val", "epoch": 88, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7676, "bbox_mAP_50": 0.8802, "bbox_mAP_75": 0.8479, "bbox_mAP_s": 0.1515, "bbox_mAP_m": 0.6663, "bbox_mAP_l": 0.8324, "bbox_mAP_copypaste": "0.7676 0.8802 0.8479 0.1515 0.6663 0.8324"}
{"mode": "val", "epoch": 89, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7698, "bbox_mAP_50": 0.8805, "bbox_mAP_75": 0.8478, "bbox_mAP_s": 0.1515, "bbox_mAP_m": 0.6663, "bbox_mAP_l": 0.8356, "bbox_mAP_copypaste": "0.7698 0.8805 0.8478 0.1515 0.6663 0.8356"}
{"mode": "val", "epoch": 90, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7678, "bbox_mAP_50": 0.8806, "bbox_mAP_75": 0.8479, "bbox_mAP_s": 0.1515, "bbox_mAP_m": 0.6663, "bbox_mAP_l": 0.8324, "bbox_mAP_copypaste": "0.7678 0.8806 0.8479 0.1515 0.6663 0.8324"}
{"mode": "val", "epoch": 91, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7729, "bbox_mAP_50": 0.8803, "bbox_mAP_75": 0.8475, "bbox_mAP_s": 0.1515, "bbox_mAP_m": 0.6663, "bbox_mAP_l": 0.8398, "bbox_mAP_copypaste": "0.7729 0.8803 0.8475 0.1515 0.6663 0.8398"}
{"mode": "val", "epoch": 92, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7683, "bbox_mAP_50": 0.8805, "bbox_mAP_75": 0.8478, "bbox_mAP_s": 0.1515, "bbox_mAP_m": 0.6557, "bbox_mAP_l": 0.8354, "bbox_mAP_copypaste": "0.7683 0.8805 0.8478 0.1515 0.6557 0.8354"}
{"mode": "val", "epoch": 93, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7692, "bbox_mAP_50": 0.8804, "bbox_mAP_75": 0.8476, "bbox_mAP_s": 0.1515, "bbox_mAP_m": 0.6663, "bbox_mAP_l": 0.8351, "bbox_mAP_copypaste": "0.7692 0.8804 0.8476 0.1515 0.6663 0.8351"}
{"mode": "val", "epoch": 94, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.768, "bbox_mAP_50": 0.8803, "bbox_mAP_75": 0.8475, "bbox_mAP_s": 0.1515, "bbox_mAP_m": 0.6557, "bbox_mAP_l": 0.8349, "bbox_mAP_copypaste": "0.7680 0.8803 0.8475 0.1515 0.6557 0.8349"}
{"mode": "val", "epoch": 95, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7738, "bbox_mAP_50": 0.8804, "bbox_mAP_75": 0.8477, "bbox_mAP_s": 0.1515, "bbox_mAP_m": 0.6557, "bbox_mAP_l": 0.8429, "bbox_mAP_copypaste": "0.7738 0.8804 0.8477 0.1515 0.6557 0.8429"}
{"mode": "val", "epoch": 96, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7713, "bbox_mAP_50": 0.8804, "bbox_mAP_75": 0.8477, "bbox_mAP_s": 0.1515, "bbox_mAP_m": 0.6557, "bbox_mAP_l": 0.8394, "bbox_mAP_copypaste": "0.7713 0.8804 0.8477 0.1515 0.6557 0.8394"}
{"mode": "val", "epoch": 97, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7712, "bbox_mAP_50": 0.8803, "bbox_mAP_75": 0.8476, "bbox_mAP_s": 0.1515, "bbox_mAP_m": 0.6557, "bbox_mAP_l": 0.8394, "bbox_mAP_copypaste": "0.7712 0.8803 0.8476 0.1515 0.6557 0.8394"}
{"mode": "val", "epoch": 98, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7725, "bbox_mAP_50": 0.8805, "bbox_mAP_75": 0.8478, "bbox_mAP_s": 0.1515, "bbox_mAP_m": 0.6668, "bbox_mAP_l": 0.8393, "bbox_mAP_copypaste": "0.7725 0.8805 0.8478 0.1515 0.6668 0.8393"}
{"mode": "val", "epoch": 99, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7739, "bbox_mAP_50": 0.8805, "bbox_mAP_75": 0.8478, "bbox_mAP_s": 0.1515, "bbox_mAP_m": 0.6668, "bbox_mAP_l": 0.8412, "bbox_mAP_copypaste": "0.7739 0.8805 0.8478 0.1515 0.6668 0.8412"}
{"mode": "val", "epoch": 100, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7713, "bbox_mAP_50": 0.8805, "bbox_mAP_75": 0.8477, "bbox_mAP_s": 0.1515, "bbox_mAP_m": 0.6557, "bbox_mAP_l": 0.8393, "bbox_mAP_copypaste": "0.7713 0.8805 0.8477 0.1515 0.6557 0.8393"}
